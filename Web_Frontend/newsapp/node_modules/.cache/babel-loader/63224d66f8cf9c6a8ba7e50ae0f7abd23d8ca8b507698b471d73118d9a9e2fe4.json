{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Weather App\\\\weatherapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [cityInput, setCityInput] = useState('');\n  const [error, setError] = useState('');\n\n  // Determine dynamic styles based on the weather condition.\n  const getWeatherStyle = weatherData => {\n    if (!weatherData) return {};\n    const condition = weatherData.weather[0].main;\n    let backgroundColor = '';\n    let color = '#fff';\n    switch (condition) {\n      case 'Clear':\n        backgroundColor = '#f7d794'; // Sunny, warm tone\n        color = '#333';\n        break;\n      case 'Clouds':\n        backgroundColor = '#b0bec5'; // Soft gray-blue tone\n        color = '#333';\n        break;\n      case 'Rain':\n        backgroundColor = '#81d4fa'; // Cool blue tone\n        color = '#fff';\n        break;\n      case 'Snow':\n        backgroundColor = '#e1f5fe'; // Light, frosty tone\n        color = '#333';\n        break;\n      default:\n        backgroundColor = '#90a4ae'; // Default tone for other conditions\n        color = '#fff';\n    }\n    return {\n      backgroundColor,\n      color,\n      padding: '20px',\n      borderRadius: '8px',\n      marginTop: '20px',\n      transition: 'background-color 0.5s ease'\n    };\n  };\n  const fetchWeatherByCoords = async (lat, lon) => {\n    try {\n      const response = await fetch(`http://localhost:5000/weather?lat=${lat}&lon=${lon}`);\n      const data = await response.json();\n      setWeather(data);\n      setError('');\n    } catch (err) {\n      setError('Unable to fetch weather data.');\n    }\n  };\n  const fetchWeatherByCity = async city => {\n    try {\n      const response = await fetch(`http://localhost:5000/weather?city=${city}`);\n      const data = await response.json();\n      if (data.error) {\n        setError(data.error);\n        setWeather(null);\n      } else {\n        setWeather(data);\n        setError('');\n      }\n    } catch (err) {\n      setError('Unable to fetch weather data.');\n    }\n  };\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        fetchWeatherByCoords(position.coords.latitude, position.coords.longitude);\n      }, () => {\n        setError('Geolocation permission denied or unavailable.');\n      });\n    } else {\n      setError('Geolocation is not supported by this browser.');\n    }\n  }, []);\n  const handleSearch = e => {\n    e.preventDefault();\n    if (cityInput.trim() !== '') {\n      fetchWeatherByCity(cityInput);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city name\",\n        value: cityInput,\n        onChange: e => setCityInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-details\",\n      style: getWeatherStyle(weather),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [weather.name, \", \", weather.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.main.temp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weather.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind: \", weather.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6sblhi2iSRhRPsxwLPY36OEzVK0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","weather","setWeather","cityInput","setCityInput","error","setError","getWeatherStyle","weatherData","condition","main","backgroundColor","color","padding","borderRadius","marginTop","transition","fetchWeatherByCoords","lat","lon","response","fetch","data","json","err","fetchWeatherByCity","city","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","handleSearch","e","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","style","name","sys","country","description","temp","humidity","wind","speed","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Weather App/weatherapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [weather, setWeather] = useState(null);\n  const [cityInput, setCityInput] = useState('');\n  const [error, setError] = useState('');\n\n  // Determine dynamic styles based on the weather condition.\n  const getWeatherStyle = (weatherData) => {\n    if (!weatherData) return {};\n    const condition = weatherData.weather[0].main;\n    let backgroundColor = '';\n    let color = '#fff';\n\n    switch (condition) {\n      case 'Clear':\n        backgroundColor = '#f7d794'; // Sunny, warm tone\n        color = '#333';\n        break;\n      case 'Clouds':\n        backgroundColor = '#b0bec5'; // Soft gray-blue tone\n        color = '#333';\n        break;\n      case 'Rain':\n        backgroundColor = '#81d4fa'; // Cool blue tone\n        color = '#fff';\n        break;\n      case 'Snow':\n        backgroundColor = '#e1f5fe'; // Light, frosty tone\n        color = '#333';\n        break;\n      default:\n        backgroundColor = '#90a4ae'; // Default tone for other conditions\n        color = '#fff';\n    }\n\n    return {\n      backgroundColor,\n      color,\n      padding: '20px',\n      borderRadius: '8px',\n      marginTop: '20px',\n      transition: 'background-color 0.5s ease',\n    };\n  };\n\n  const fetchWeatherByCoords = async (lat, lon) => {\n    try {\n      const response = await fetch(`http://localhost:5000/weather?lat=${lat}&lon=${lon}`);\n      const data = await response.json();\n      setWeather(data);\n      setError('');\n    } catch (err) {\n      setError('Unable to fetch weather data.');\n    }\n  };\n\n  const fetchWeatherByCity = async (city) => {\n    try {\n      const response = await fetch(`http://localhost:5000/weather?city=${city}`);\n      const data = await response.json();\n      if (data.error) {\n         setError(data.error);\n         setWeather(null);\n      } else {\n         setWeather(data);\n         setError('');\n      }\n    } catch (err) {\n      setError('Unable to fetch weather data.');\n    }\n  };\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          fetchWeatherByCoords(position.coords.latitude, position.coords.longitude);\n        },\n        () => {\n          setError('Geolocation permission denied or unavailable.');\n        }\n      );\n    } else {\n      setError('Geolocation is not supported by this browser.');\n    }\n  }, []);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (cityInput.trim() !== '') {\n      fetchWeatherByCity(cityInput);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Weather App</h1>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter city name\"\n          value={cityInput}\n          onChange={(e) => setCityInput(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {error && <p className=\"error\">{error}</p>}\n      {weather && (\n        <div className=\"weather-details\" style={getWeatherStyle(weather)}>\n          <h2>\n            {weather.name}, {weather.sys.country}\n          </h2>\n          <p>{weather.weather[0].description}</p>\n          <p>Temperature: {weather.main.temp} Â°C</p>\n          <p>Humidity: {weather.main.humidity}%</p>\n          <p>Wind: {weather.wind.speed} m/s</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}